# ========================================
# automagik-tools Configuration
# ========================================
# Copy this file to .env and fill in your values
#
# Usage with uvx (no installation required):
#   uvx automagik-tools serve --tool automagik
#
# Usage with uv (for development):
#   uv run automagik-tools serve --tool automagik
#
# For Claude Desktop, use uvx in stdio mode:
#   uvx automagik-tools serve --tool automagik --transport stdio

# ========================================
# Core System Configuration
# ========================================

# Server Configuration
HOST=127.0.0.1
PORT=8000

# Smart Mode (enables intelligent tool selection)
# ASK_SMART_MODE=true

# Transport Detection (automatically detected, usually stdio for Claude Desktop)
# MCP_TRANSPORT=stdio

# ========================================
# Automagik Tool Configuration
# ========================================
# Unified configuration for all Automagik-related tools
AUTOMAGIK_API_KEY=your-api-key-here
AUTOMAGIK_BASE_URL=https://api.example.com
AUTOMAGIK_TIMEOUT=30
# Enable markdown enhancement (AI-powered formatting of responses)
# Set to false to get raw JSON responses for better integration with Genie
AUTOMAGIK_ENABLE_MARKDOWN=true
AUTOMAGIK_OPENAPI_URL=http://localhost:8881/api/v1/openapi.json

# ========================================
# AutoMagik Workflows Tool Configuration
# ========================================
# Smart Claude workflow orchestration with real-time progress tracking
AUTOMAGIK_WORKFLOWS_API_KEY=your-api-key-here
AUTOMAGIK_WORKFLOWS_BASE_URL=http://localhost:28881
AUTOMAGIK_WORKFLOWS_TIMEOUT=7200
AUTOMAGIK_WORKFLOWS_POLLING_INTERVAL=8
AUTOMAGIK_WORKFLOWS_MAX_RETRIES=3

# ========================================
# Genie Tool Configuration
# ========================================
# Generic MCP tool orchestrator with persistent memory
# NOTE: Genie requires at least one MCP server to be configured (see MCP Server Configurations below)
OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxx
GENIE_MODEL=gpt-4.1
GENIE_MEMORY_DB=genie_memory.db
GENIE_STORAGE_DB=genie_storage.db
GENIE_SESSION_ID=global_genie_session
GENIE_HISTORY_RUNS=3
GENIE_SHOW_TOOL_CALLS=true

# Genie MCP Server Management
GENIE_MCP_CLEANUP_TIMEOUT=2.0
GENIE_SSE_CLEANUP_DELAY=0.2
GENIE_AGGRESSIVE_CLEANUP=true

# MCP Server Configurations - Choose one of these methods:
# Method 1: JSON configuration (for multiple servers)
# GENIE_MCP_CONFIGS={"filesystem": {"command": "npx", "args": ["-y", "@modelcontextprotocol/server-filesystem", "/tmp"]}}

# Method 2: Individual server configs (uncomment to use)
# Example: Connect Genie to Automagik agents - uses unified AUTOMAGIK_* variables above

# Example: Connect to Linear API
# LINEAR_API_TOKEN=lin_api_xxxxxxxxxxxx

# Example: Connect to Evolution API (WhatsApp)
# EVOLUTION_API_KEY=your-evolution-key
# EVOLUTION_API_BASE_URL=http://localhost:8080

# ========================================
# AI Processing Configuration (Optional)
# ========================================
# JSON Markdown Processor settings for enhanced AI responses
# JSON_PROCESSOR_MODEL=gpt-4.1-nano
# JSON_PROCESSOR_MAX_TOKENS=2000
# JSON_PROCESSOR_TEMPERATURE=0.1

# ========================================
# Development & Testing (Optional)
# ========================================
# Transport mode override (automatically detected in most cases)
# AUTOMAGIK_TRANSPORT=stdio

# FastMCP logging level for development
# FASTMCP_LOG_LEVEL=ERROR

# FastMCP resource prefix format (path or protocol)
# FASTMCP_RESOURCE_PREFIX_FORMAT=path

# ========================================
# Dynamic OpenAPI Tool Support
# ========================================
# Use automagik-tools to serve any OpenAPI endpoint directly:
#   uvx automagik-tools serve --openapi-url https://api.example.com/openapi.json
#   uvx automagik-tools serve --openapi-url https://api.example.com/openapi.json --api-key YOUR_KEY
#
# No additional environment variables needed for basic OpenAPI tools.
# For authentication, use the --api-key flag or set tool-specific variables below.

# Example: Discord API via OpenAPI
# DISCORD_TOKEN=your-discord-token-here

# Example: Custom API
# YOUR_API_NAME_API_KEY=your-api-key-here
# YOUR_API_NAME_BASE_URL=https://api.example.com

# ========================================
# Publishing Configuration (Development)
# ========================================
# Only needed if you're contributing to automagik-tools development
# Get your tokens from:
# - PyPI: https://pypi.org/manage/account/token/
# - TestPyPI: https://test.pypi.org/manage/account/token/
# PYPI_TOKEN=pypi-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# TESTPYPI_TOKEN=pypi-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx